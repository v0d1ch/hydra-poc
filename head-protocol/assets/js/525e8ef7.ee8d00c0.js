"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[2037],{9257:function(e,n,t){t.d(n,{Z:function(){return c}});var a=t(7294),r=t(1736),i="terminalWindow_wGrl",o="terminalWindowHeader_o9Cs",d="terminalWindowBody_tzdS",l="buttons_IGLB",s="dot_fGZE";function c(e){var n=e.children,t=e.minHeight,c="string"==typeof n?a.createElement(r.Z,null,n):n;return a.createElement("div",{className:i,style:{minHeight:t}},a.createElement("div",{className:o},a.createElement("div",{className:l},a.createElement("span",{className:s,style:{background:"#f25f58"}}),a.createElement("span",{className:s,style:{background:"#fbbe3c"}}),a.createElement("span",{className:s,style:{background:"#58cb42"}}))),a.createElement("div",{className:d},c))}},7989:function(e,n,t){t.r(n),t.d(n,{assets:function(){return f},contentTitle:function(){return g},default:function(){return w},frontMatter:function(){return v},metadata:function(){return y},toc:function(){return N}});var a=t(7462),r=t(3366),i=t(7294),o=t(3905),d=t(9257),l=t(2389),s=t(3725),c=t(6010),p="tabItem_LplD";function u(e){var n,t,r,o=e.lazy,d=e.block,l=e.defaultValue,u=e.values,m=e.groupId,h=e.className,k=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=u?u:k.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),g=(0,s.lx)(v,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===l?l:null!=(n=null!=l?l:null==(t=k.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(r=k[0])?void 0:r.props.value;if(null!==y&&!v.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var f=(0,s.UB)(),N=f.tabGroupChoices,b=f.setTabGroupChoices,w=(0,i.useState)(y),T=w[0],C=w[1],x=[],_=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var E=N[m];null!=E&&E!==T&&v.some((function(e){return e.value===E}))&&C(E)}var D=function(e){var n=e.currentTarget,t=x.indexOf(n),a=v[t].value;a!==T&&(_(n),C(a),null!=m&&b(m,a))},I=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=x.indexOf(e.currentTarget)+1;t=x[a]||x[0];break;case"ArrowLeft":var r=x.indexOf(e.currentTarget)-1;t=x[r]||x[x.length-1]}null==(n=t)||n.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":d},h)},v.map((function(e){var n=e.value,t=e.label,r=e.attributes;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:function(e){return x.push(e)},onKeyDown:I,onFocus:D,onClick:D},r,{className:(0,c.Z)("tabs__item",p,null==r?void 0:r.className,{"tabs__item--active":T===n})}),null!=t?t:n)}))),o?(0,i.cloneElement)(k.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},k.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==T})}))))}function m(e){var n=(0,l.Z)();return i.createElement(u,(0,a.Z)({key:String(n)},e))}function h(e){var n=e.children,t=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}var k=["components"],v={sidebar_position:3},g="Without Docker",y={unversionedId:"getting-started/demo/without-docker",id:"getting-started/demo/without-docker",title:"Without Docker",description:"Running the demo without Docker containers, but with plain executables and scripts.",source:"@site/docs/getting-started/demo/without-docker.md",sourceDirName:"getting-started/demo",slug:"/getting-started/demo/without-docker",permalink:"/head-protocol/docs/getting-started/demo/without-docker",editUrl:"https://github.com/input-output-hk/hydra/tree/master/docs/docs/getting-started/demo/without-docker.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"With Docker",permalink:"/head-protocol/docs/getting-started/demo/with-docker"},next:{title:"Hydra development",permalink:"/head-protocol/docs/getting-started/developing-on-hydra"}},f={},N=[{value:"Preparation",id:"preparation",level:2},{value:"Setting-up The Chain",id:"setting-up-the-chain",level:2},{value:"Seeding The Network",id:"seeding-the-network",level:2},{value:"Setting-up The Hydra Network",id:"setting-up-the-hydra-network",level:2},{value:"Running The Clients",id:"running-the-clients",level:2}],b={toc:N};function w(e){var n=e.components,t=(0,r.Z)(e,k);return(0,o.kt)("wrapper",(0,a.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"without-docker"},"Without Docker"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Running the demo without Docker containers, but with plain executables and scripts.")),(0,o.kt)("h2",{id:"preparation"},"Preparation"),(0,o.kt)("p",null,"Make sure that you have a ",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"hydra-node")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"hydra-tui")," executable in your scope. You can either"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use ",(0,o.kt)("inlineCode",{parentName:"li"},"nix-shell demo")," or"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cabal build")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"cabal exec")," them (do not forget the ",(0,o.kt)("inlineCode",{parentName:"li"},"--")," before passing further arguments).")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Tip for tmux users")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"demo")," nix-shell, there is a ",(0,o.kt)("inlineCode",{parentName:"p"},"run-tmux")," script which starts a new ",(0,o.kt)("inlineCode",{parentName:"p"},"tmux")," session with multiple windows and panes executing all the commands below!"))),(0,o.kt)("p",null,"All further commands are written as if executed from the ",(0,o.kt)("inlineCode",{parentName:"p"},"demo")," folder in the project repository, so make sure to ",(0,o.kt)("inlineCode",{parentName:"p"},"cd demo")," before continuing."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Tip for nix-direnv users")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Allowing the ",(0,o.kt)("inlineCode",{parentName:"p"},"demo/.envrc")," will ensure you have the nix shell environment available whenever you are in the ",(0,o.kt)("inlineCode",{parentName:"p"},"demo/")," directory. To use this, opt-in via ",(0,o.kt)("inlineCode",{parentName:"p"},"direnv allow")," after ",(0,o.kt)("inlineCode",{parentName:"p"},"cd demo"),"."))),(0,o.kt)("h2",{id:"setting-up-the-chain"},"Setting-up The Chain"),(0,o.kt)("p",null,"First, let's prepare and start an ad-hoc, single ",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node")," devnet using our configuration. Note that this will create a ",(0,o.kt)("inlineCode",{parentName:"p"},"devnet")," directory in your current working directory:"),(0,o.kt)(d.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"./prepare-devnet.sh\ncd devnet\ncardano-node run \\\n  --config cardano-node.json \\\n  --topology topology.json \\\n  --database-path db \\\n  --socket-path node.socket \\\n  --shelley-operational-certificate opcert.cert \\\n  --shelley-kes-key kes.skey \\\n  --shelley-vrf-key vrf.skey\n"))),(0,o.kt)("h2",{id:"seeding-the-network"},"Seeding The Network"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"seed-devnet.sh")," script by passing it the path/command to a cardano-cli and hydra-node executable to use, instead of having it using the Docker container. For example:"),(0,o.kt)(d.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export CARDANO_NODE_SOCKET_PATH=devnet/node.socket\n./seed-devnet.sh $(which cardano-cli) $(which hydra-node)\n"))),(0,o.kt)("p",null,"Note, should you want to use ",(0,o.kt)("inlineCode",{parentName:"p"},"cabal"),", pass the invocation for example like this ",(0,o.kt)("inlineCode",{parentName:"p"},'"cabal exec hydra-node --"'),"."),(0,o.kt)("h2",{id:"setting-up-the-hydra-network"},"Setting-up The Hydra Network"),(0,o.kt)("p",null,"Then, in 3 different terminals, start 3 Hydra nodes from the ",(0,o.kt)("inlineCode",{parentName:"p"},"demo/")," directory:"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"We are trying to force ipv4 addresses by using ",(0,o.kt)("inlineCode",{parentName:"p"},"--peer 127.0.0.1"),".\nIf you don't see any connected peers in the tui it probably means that your system is configured to use ipv6."))),(0,o.kt)(m,{mdxType:"Tabs"},(0,o.kt)(h,{value:"Alice",mdxType:"TabItem"},(0,o.kt)(d.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source .env && hydra-node \\\n  --node-id 1 --port 5001 --api-port 4001 --monitoring-port 6001 \\\n  --peer 127.0.0.1:5002 \\\n  --peer 127.0.0.1:5003 \\\n  --hydra-signing-key alice.sk \\\n  --hydra-verification-key bob.vk \\\n  --hydra-verification-key carol.vk \\\n  --hydra-scripts-tx-id $HYDRA_SCRIPTS_TX_ID \\\n  --cardano-signing-key devnet/credentials/alice.sk \\\n  --cardano-verification-key devnet/credentials/bob.vk \\\n  --cardano-verification-key devnet/credentials/carol.vk \\\n  --ledger-genesis devnet/genesis-shelley.json \\\n  --ledger-protocol-parameters devnet/protocol-parameters.json \\\n  --network-id 42 \\\n  --node-socket devnet/node.socket \\\n  --persistence-dir persistence/alice\n")))),(0,o.kt)(h,{value:"Bob",mdxType:"TabItem"},(0,o.kt)(d.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source .env && hydra-node \\\n  --node-id 2 --port 5002 --api-port 4002 --monitoring-port 6002 \\\n  --peer 127.0.0.1:5001 \\\n  --peer 127.0.0.1:5003 \\\n  --hydra-signing-key bob.sk \\\n  --hydra-verification-key alice.vk \\\n  --hydra-verification-key carol.vk \\\n  --hydra-scripts-tx-id $HYDRA_SCRIPTS_TX_ID \\\n  --cardano-signing-key devnet/credentials/bob.sk \\\n  --cardano-verification-key devnet/credentials/alice.vk \\\n  --cardano-verification-key devnet/credentials/carol.vk \\\n  --ledger-genesis devnet/genesis-shelley.json \\\n  --ledger-protocol-parameters devnet/protocol-parameters.json \\\n  --network-id 42 \\\n  --node-socket devnet/node.socket \\\n  --persistence-dir persistence/bob\n")))),(0,o.kt)(h,{value:"Carol",mdxType:"TabItem"},(0,o.kt)(d.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source .env && hydra-node \\\n  --node-id 3 --port 5003 --api-port 4003 --monitoring-port 6003 \\\n  --peer 127.0.0.1:5001 \\\n  --peer 127.0.0.1:5002 \\\n  --hydra-signing-key carol.sk \\\n  --hydra-verification-key alice.vk \\\n  --hydra-verification-key bob.vk \\\n  --hydra-scripts-tx-id $HYDRA_SCRIPTS_TX_ID \\\n  --cardano-signing-key devnet/credentials/carol.sk \\\n  --cardano-verification-key devnet/credentials/alice.vk \\\n  --cardano-verification-key devnet/credentials/bob.vk \\\n  --ledger-genesis devnet/genesis-shelley.json \\\n  --ledger-protocol-parameters devnet/protocol-parameters.json \\\n  --network-id 42 \\\n  --node-socket devnet/node.socket \\\n  --persistence-dir persistence/carol\n"))))),(0,o.kt)("p",null,"If things go well, the nodes should start logging once connected to the chain."),(0,o.kt)("h2",{id:"running-the-clients"},"Running The Clients"),(0,o.kt)("p",null,"Connect to the nodes using hydra-tui. For example, to use Alice's hydra-node and her on-chain credentials:"),(0,o.kt)(d.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"hydra-tui \\\n  --connect 0.0.0.0:4001 \\\n  --cardano-signing-key devnet/credentials/alice.sk \\\n  --network-id 42 \\\n  --node-socket devnet/node.socket\n"))),(0,o.kt)("p",null,"Replace port ",(0,o.kt)("inlineCode",{parentName:"p"},"4001")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"4002")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"4003")," to connect to the other 2 nodes and ",(0,o.kt)("inlineCode",{parentName:"p"},"alice.sk")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"bob.sk")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"carol.sk")," respectively."))}w.isMDXComponent=!0}}]);