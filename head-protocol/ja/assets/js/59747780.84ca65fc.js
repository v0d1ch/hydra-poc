"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[8550],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=a,f=d["".concat(c,".").concat(h)]||d[h]||p[h]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7577:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={slug:5,title:"5. Use io-classes\n",authors:[],tags:["Accepted"]},c=void 0,l={permalink:"/head-protocol/ja/adr/5",source:"@site/adr/2021-06-09_005-use-io-sim-classes.md",title:"5. Use io-classes\n",description:"Status",date:"2021-06-09T00:00:00.000Z",formattedDate:"2021\u5e746\u67089\u65e5",tags:[{label:"Accepted",permalink:"/head-protocol/ja/adr/tags/accepted"}],readingTime:1.055,truncated:!1,authors:[],frontMatter:{slug:"5",title:"5. Use io-classes\n",authors:[],tags:["Accepted"]},prevItem:{title:"4. Use Handle to model Effects\n",permalink:"/head-protocol/ja/adr/4"},nextItem:{title:"6. Network Broadcasts all messages\n",permalink:"/head-protocol/ja/adr/6"}},u={authorsImageUrls:[]},p=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2}],d={toc:p};function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"status"},"Status"),(0,o.kt)("p",null,"Accepted"),(0,o.kt)("h2",{id:"context"},"Context"),(0,o.kt)("p",null,"Although we try to contain the use of IO at the outskirt of the Hydra node using ",(0,o.kt)("a",{parentName:"p",href:"/adr/4"},"Handle pattern")," and ",(0,o.kt)("a",{parentName:"p",href:"/adr/2"},"Reactive core"),", low-level effects are still needed in various places, notably to define concurrently executing actions, and thus need to be tested"),(0,o.kt)("p",null,"Testing asynchronous and concurrent code is notoriously painful"),(0,o.kt)("p",null,"The ouroboros consensus test suite and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/hydra-sim"},"hydra-sim")," simulation have demonstrated the effectiveness of abstracting concurrent primitives through the use of typeclasses (MTL-style pattern) and being able to run these as pure code, harvesting and analysing produced execution traces."),(0,o.kt)("p",null,"There are other such libraries, e.g. ",(0,o.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/concurrency"},"concurrency")," and ",(0,o.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/dejafu"},"dejafu"),", as well as the venerable ",(0,o.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/exceptions"},"exceptions")," (for abstracting exception throwing)."),(0,o.kt)("h2",{id:"decision"},"Decision"),(0,o.kt)("p",null,"For all IO effects covered by the library, use functions from typeclasses exposed by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/ouroboros-network/tree/e338f2cf8e1078fbda9555dd2b169c6737ef6774/io-classes"},"io-classes"),". As of this writing, this covers:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"All STM operations through ",(0,o.kt)("inlineCode",{parentName:"li"},"MonadSTM")),(0,o.kt)("li",{parentName:"ul"},"Time and timers through ",(0,o.kt)("inlineCode",{parentName:"li"},"MonadTime")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MonadTimer")),(0,o.kt)("li",{parentName:"ul"},"Concurrency through ",(0,o.kt)("inlineCode",{parentName:"li"},"MonadAsync"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"MonadFork")),(0,o.kt)("li",{parentName:"ul"},"Exceptions through ",(0,o.kt)("inlineCode",{parentName:"li"},"MonadThrow"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"MonadCatch")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MonadMask"))),(0,o.kt)("h2",{id:"consequences"},"Consequences"),(0,o.kt)("p",null,"We can use ",(0,o.kt)("inlineCode",{parentName:"p"},"io-sim")," to evaluate IO-ish functions easily"),(0,o.kt)("p",null,"Instantiation to concrete IO is pushed at the outermost layer, eg. in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Main")," or tests."),(0,o.kt)("p",null,"As some of these functions and typeclasses clash with the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-prelude"},"cardano-prelude")," we might\nwant to define a custom prelude (candidate for another ADR)"))}h.isMDXComponent=!0}}]);