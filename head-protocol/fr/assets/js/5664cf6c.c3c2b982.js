"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[3541],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),d=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),h=r,m=p["".concat(i,".").concat(h)]||p[h]||u[h]||l;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6415:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],s={},i="Test Results for hydra-cluster",d={unversionedId:"tests/hydra-cluster/hspec-results",id:"tests/hydra-cluster/hspec-results",title:"Test Results for hydra-cluster",description:"Test.LogFilter",source:"@site/benchmarks/tests/hydra-cluster/hspec-results.md",sourceDirName:"tests/hydra-cluster",slug:"/tests/hydra-cluster/hspec-results",permalink:"/head-protocol/fr/benchmarks/tests/hydra-cluster/hspec-results",editUrl:"https://github.com/input-output-hk/hydra/tree/master/docs/benchmarks/tests/hydra-cluster/hspec-results.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Transactions Costs",permalink:"/head-protocol/fr/benchmarks/transaction-cost"},next:{title:"Test Results for hydra-node",permalink:"/head-protocol/fr/benchmarks/tests/hydra-node/hspec-results"}},c={},u=[{value:"Test.LogFilter",id:"testlogfilter",level:2},{value:"Test.Ledger.Cardano.Configuration",id:"testledgercardanoconfiguration",level:2},{value:"ShelleyGenesis",id:"shelleygenesis",level:3},{value:"ProtocolParameters",id:"protocolparameters",level:3},{value:"Test.Hydra.Cluster.Faucet",id:"testhydraclusterfaucet",level:2},{value:"seedFromFaucet",id:"seedfromfaucet",level:3},{value:"Test.Generator",id:"testgenerator",level:2},{value:"JSON encoding of Dataset",id:"json-encoding-of-dataset",level:3},{value:"Test.EndToEnd",id:"testendtoend",level:2},{value:"End-to-end on Cardano devnet",id:"end-to-end-on-cardano-devnet",level:3},{value:"hydra-node executable",id:"hydra-node-executable",level:4},{value:"Monitoring",id:"monitoring",level:4},{value:"two hydra heads scenario",id:"two-hydra-heads-scenario",level:4},{value:"restarting nodes",id:"restarting-nodes",level:4},{value:"three hydra nodes scenario",id:"three-hydra-nodes-scenario",level:4},{value:"single party hydra head",id:"single-party-hydra-head",level:4},{value:"Test.DirectChain",id:"testdirectchain",level:2},{value:"Test.CardanoNode",id:"testcardanonode",level:2}],p={toc:u};function h(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"test-results-for-hydra-cluster"},"Test Results for hydra-cluster"),(0,l.kt)("h2",{id:"testlogfilter"},"Test.LogFilter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"keeps basic structure of entry")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"replaces transactions by their ids in ReqSn")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"significantly reduces standard log messages size"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests (72% reduces size by 90%).\n\nRatios (100 in total):\n72% 0 %\n10% 90 %\n 4% 10 %\n 3% 20 %\n 3% 30 %\n 2% 40 %\n 2% 50 %\n 2% 70 %\n 2% 80 %\n"))))),(0,l.kt)("h2",{id:"testledgercardanoconfiguration"},"Test.Ledger.Cardano.Configuration"),(0,l.kt)("h3",{id:"shelleygenesis"},"ShelleyGenesis"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"can be read from JSON")),(0,l.kt)("h3",{id:"protocolparameters"},"ProtocolParameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"can be read from JSON")),(0,l.kt)("h2",{id:"testhydraclusterfaucet"},"Test.Hydra.Cluster.Faucet"),(0,l.kt)("h3",{id:"seedfromfaucet"},"seedFromFaucet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"should work concurrently")),(0,l.kt)("h2",{id:"testgenerator"},"Test.Generator"),(0,l.kt)("h3",{id:"json-encoding-of-dataset"},"JSON encoding of Dataset"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"allows to encode values with aeson and read them back"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"generates a Dataset that keeps UTXO constant"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n"))))),(0,l.kt)("h2",{id:"testendtoend"},"Test.EndToEnd"),(0,l.kt)("h3",{id:"end-to-end-on-cardano-devnet"},"End-to-end on Cardano devnet"),(0,l.kt)("h4",{id:"hydra-node-executable"},"hydra-node executable"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"display proper semantic version given it is passed --version argument"),(0,l.kt)("li",{parentName:"ul"},"logs its command line arguments")),(0,l.kt)("h4",{id:"monitoring"},"Monitoring"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Node exposes Prometheus metrics on port 6001")),(0,l.kt)("h4",{id:"two-hydra-heads-scenario"},"two hydra heads scenario"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"two heads on the same network do not conflict"),(0,l.kt)("li",{parentName:"ul"},"bob cannot abort alice's head")),(0,l.kt)("h4",{id:"restarting-nodes"},"restarting nodes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"can abort head after restart"),(0,l.kt)("li",{parentName:"ul"},"can observe a commit tx after a restart, even when a tx happened while down"),(0,l.kt)("li",{parentName:"ul"},"can start chain from the past and replay on-chain events"),(0,l.kt)("li",{parentName:"ul"},"close of an initial snapshot from re-initialized node is contested")),(0,l.kt)("h4",{id:"three-hydra-nodes-scenario"},"three hydra nodes scenario"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"inits a Head, processes a single Cardano transaction and closes it again"),(0,l.kt)("li",{parentName:"ul"},"inits a Head and closes it immediately ")),(0,l.kt)("h4",{id:"single-party-hydra-head"},"single party hydra head"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"full head life-cycle")),(0,l.kt)("h2",{id:"testdirectchain"},"Test.DirectChain"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"can init and abort a head given nothing has been committed"),(0,l.kt)("li",{parentName:"ul"},"can init and abort a 2-parties head after one party has committed"),(0,l.kt)("li",{parentName:"ul"},"cannot abort a non-participating head"),(0,l.kt)("li",{parentName:"ul"},"can commit"),(0,l.kt)("li",{parentName:"ul"},"can commit empty UTxO"),(0,l.kt)("li",{parentName:"ul"},"can open, close & fanout a Head"),(0,l.kt)("li",{parentName:"ul"},"can restart head to point in the past and replay on-chain events"),(0,l.kt)("li",{parentName:"ul"},"cannot restart head to an unknown point"),(0,l.kt)("li",{parentName:"ul"},"can publish and query reference scripts in a timely manner")),(0,l.kt)("h2",{id:"testcardanonode"},"Test.CardanoNode"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"has expected cardano-node version available"),(0,l.kt)("li",{parentName:"ul"},"withCardanoNodeDevnet does start a block-producing devnet within 5 seconds")))}h.isMDXComponent=!0}}]);