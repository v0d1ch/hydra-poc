name: "Smoke test"
on:
  workflow_dispatch:
    inputs:
      network:
        description: "Cardano network to run against"
        required: true
        default: "vasil-dev"
        type: choice
        options:
        - vasil-dev
        - testnet
        - preview
        - preprod

      hydra-scripts-tx-id:
        description: "TxId of already published scripts (leave empty to publish)"
        required: false

jobs:
  smoke-test:
    name: "Smoke test on ${{inputs.network}}"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: input-output-hk/hydra
        token: ${{ secrets.MY_TOKEN || github.token }}
        submodules: true

    - name: ‚ùÑ Prepare nix
      uses: cachix/install-nix-action@v20
      with:
        extra_nix_config: |
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
          substituters = https://cache.nixos.org https://cache.iog.io

    - name: ‚ùÑ Cachix cache of nix derivations
      uses: cachix/cachix-action@v12
      with:
        name: hydra-node
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: üîÅ Github cache of state-directory
      uses: actions/cache@v3
      with:
        path: state-${{inputs.network}}
        key: state-${{inputs.network}}

    - name: ‚ùÑ Prepare nix-shell
      run: |
        nix-build -A exes shell.nix

    - name: üö¨ Run hydra-cluster smoke test
      run: |
        if [ -n "${{inputs.hydra-scripts-tx-id}}" ]; then
          nix-shell -A exes --run "hydra-cluster --${{inputs.network}} --hydra-scripts-tx-id ${{inputs.hydra-scripts-tx-id}} --state-directory state-${{inputs.network}}"
        else
          nix-shell -A exes --run "hydra-cluster --${{inputs.network}} --publish-hydra-scripts --state-directory state-${{inputs.network}}"
        fi

    - name: üíæ Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: hydra-cluster-logs
        path: state-${{inputs.network}}/logs/**/*
